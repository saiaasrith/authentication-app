{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://bffapi.biztel.ai:8080';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const signUp = async data => {\n  try {\n    const response = await api.post('/api/auth/signup', data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      errorMessage: 'Network error occurred'\n    };\n  }\n};\nexport const login = async data => {\n  try {\n    const response = await api.post('/api/auth/login', data);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      errorMessage: 'Network error occurred'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","signUp","data","response","post","error","_error$response","errorMessage","login","token","localStorage","setItem","_error$response2"],"sources":["r:/Vs-code/authentication-app/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://bffapi.biztel.ai:8080';\n\nexport interface SignUpData {\n  username: string;\n  email: string;\n  password: string;\n  inviteCode: string;\n}\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport const signUp = async (data: SignUpData) => {\n  try {\n    const response = await api.post('/api/auth/signup', data);\n    return response.data;\n  } catch (error: any) {\n    throw error.response?.data || { errorMessage: 'Network error occurred' };\n  }\n};\n\nexport const login = async (data: LoginData) => {\n  try {\n    const response = await api.post('/api/auth/login', data);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n    }\n    return response.data;\n  } catch (error: any) {\n    throw error.response?.data || { errorMessage: 'Network error occurred' };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,+BAA+B;AAcpD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAG,MAAOC,IAAgB,IAAK;EAChD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,kBAAkB,EAAEF,IAAI,CAAC;IACzD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAU,EAAE;IAAA,IAAAC,eAAA;IACnB,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBJ,IAAI,KAAI;MAAEK,YAAY,EAAE;IAAyB,CAAC;EAC1E;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,MAAON,IAAe,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,iBAAiB,EAAEF,IAAI,CAAC;IACxD,IAAIC,QAAQ,CAACD,IAAI,CAACO,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,QAAQ,CAACD,IAAI,CAACO,KAAK,CAAC;IACpD;IACA,OAAON,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAU,EAAE;IAAA,IAAAO,gBAAA;IACnB,MAAM,EAAAA,gBAAA,GAAAP,KAAK,CAACF,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAI;MAAEK,YAAY,EAAE;IAAyB,CAAC;EAC1E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}